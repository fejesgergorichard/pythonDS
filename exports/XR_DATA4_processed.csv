Index;Name;IsConst;Min;Max;Unique values;Unique values in characters
4;CODE_REQ_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
5;XRAY_READY_XB1.190_XR;TRUE;;;[1];['\x01']
6;SPEED_OK_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
7;SPARE_I80.4_XB1.190_XR;TRUE;;;[1];['\x01']
8;POWER_ON_XB1.190_XR;TRUE;;;[1];['\x01']
9;REPAIR_SWITCH_XB1.190_XR;TRUE;;;[0];['\x00']
10;SERVICE_MODE_XB1.190_XR;TRUE;;;[0];['\x00']
11;TRANSIT_MODE_XB1.190_XR;TRUE;;;[0];['\x00']
12;NO_SCAN_ACT_XB1.190_XR;TRUE;;;[0];['\x00']
13;LS3_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
14;SPARE_I81.3_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
15;ES_RESET_XB1.190_XR;TRUE;;;[0];['\x00']
16;SPARE_I81.5_XB1.190_XR;TRUE;;;[0];['\x00']
17;SPARE_I81.6_XB1.190_XR;TRUE;;;[0];['\x00']
18;SPARE_I81.7_XB1.190_XR;TRUE;;;[0];['\x00']
19;LS0_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
20;LS1_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
21;SPARE_I82.2_XB1.190_XR;TRUE;;;[0];['\x00']
22;SPARE_I82.3_XB1.190_XR;TRUE;;;[0];['\x00']
23;LS4_XB1.190_XR;FALSE;0;1;[0, 1];['\x00', '\x01']
24;SPARE_I82.5_XB1.190_XR;TRUE;;;[0];['\x00']
25;SPARE_I82.6_XB1.190_XR;TRUE;;;[0];['\x00']
26;XB1.190_ESB11-15;TRUE;;;[1];['\x01']
27;IB 512;FALSE;0;113;[0, 16, 17, 33, 113];['\x00', '\x10', '\x11', '!', 'q']
28;IB 513;TRUE;;;[0];['\x00']
29;IB 514;FALSE;0;18;[0, 1, 18, 16];['\x00', '\x01', '\x12', '\x10']
30;IB 515;FALSE;0;68;[48, 0, 68];['0', '\x00', 'D']
31;IB 516;FALSE;48;57;[57, 49, 48];['9', '1', '0']
32;IB 517;FALSE;48;57;[57, 56, 48];['9', '8', '0']
33;IB 518;FALSE;48;57;[57, 48];['9', '0']
34;IB 519;FALSE;48;57;[57, 51, 48];['9', '3', '0']
35;IB 520;FALSE;49;57;[57, 50, 52, 49];['9', '2', '4', '1']
36;IB 521;FALSE;51;57;[57, 53, 54, 51];['9', '5', '6', '3']
37;IB 522;FALSE;48;57;[57, 48, 55, 56, 49, 50];['9', '0', '7', '8', '1', '2']
38;IB 523;FALSE;48;57;[57, 54, 56, 55, 48, 49, 50, 51, 52, 53];['9', '6', '8', '7', '0', '1', '2', '3', '4', '5']
39;IB 524;FALSE;48;57;[57, 55, 49, 51, 53, 50, 48, 52, 56, 54];['9', '7', '1', '3', '5', '2', '0', '4', '8', '6']
40;IB 527;TRUE;;;[72];['H']
41;IB 530;FALSE;65;82;[65, 82];['A', 'R']
42;QB 512;FALSE;0;33;[33, 17, 0, 32, 16];['!', '\x11', '\x00', ' ', '\x10']
43;QB 514;FALSE;0;14;[0, 14];['\x00', '\x0e']
44;QB 515;FALSE;0;68;[0, 48, 68];['\x00', '0', 'D']
45;QB 516;FALSE;0;49;[0, 49, 48];['\x00', '1', '0']
46;RCV_BUFFER.SCR_RES.ID_AC[1];FALSE;32;68;[32, 48, 68];[' ', '0', 'D']
47;RCV_BUFFER.SCR_RES.ID_AC[2];FALSE;32;49;[32, 49, 48];[' ', '1', '0']
48;RCV_BUFFER.SCR_RES.ID_AC[3];FALSE;32;56;[32, 56, 48];[' ', '8', '0']
49;RCV_BUFFER.SCR_RES.ID_AC[4];FALSE;32;48;[32, 48];[' ', '0']
50;RCV_BUFFER.SCR_RES.ID_AC[5];FALSE;32;51;[32, 51, 48];[' ', '3', '0']
51;RCV_BUFFER.SCR_RES.ID_AC[6];FALSE;32;52;[32, 50, 52, 49];[' ', '2', '4', '1']
52;RCV_BUFFER.SCR_RES.ID_AC[7];FALSE;32;57;[32, 53, 54, 57, 51];[' ', '5', '6', '9', '3']
53;RCV_BUFFER.SCR_RES.ID_AC[8];FALSE;32;57;[32, 57, 48, 55, 56, 49, 50];[' ', '9', '0', '7', '8', '1', '2']
54;RCV_BUFFER.SCR_RES.ID_AC[9];FALSE;32;57;[32, 54, 56, 55, 57, 48, 49, 50, 51, 52, 53];[' ', '6', '8', '7', '9', '0', '1', '2', '3', '4', '5']
55;RCV_BUFFER.SCR_RES.ID_AC[10];FALSE;32;57;[32, 55, 49, 51, 50, 53, 48, 52, 56, 57, 54];[' ', '7', '1', '3', '2', '5', '0', '4', '8', '9', '6']
56;RCV_BUFFER.SCR_RES.ID_AC[11];TRUE;;;[32];[' ']
57;RCV_BUFFER.SCR_RES.ID_AC[12];TRUE;;;[32];[' ']
58;RCV_BUFFER.SCR_RES.HIGH_RISK_C;FALSE;32;72;[32, 72];[' ', 'H']
59;RCV_BUFFER.SCR_RES.SPARE_1_C;TRUE;;;[32];[' ']
60;RCV_BUFFER.SCR_RES.RESULT_AC[1];FALSE;32;49;[32, 49];[' ', '1']
61;RCV_BUFFER.SCR_RES.RESULT_AC[2];FALSE;32;82;[32, 65, 82];[' ', 'A', 'R']
62;RCV_BUFFER.SCR_RES.RESULT_AC[3];FALSE;32;50;[32, 50];[' ', '2']
63;RCV_BUFFER.SCR_RES.RESULT_AC[4];FALSE;32;84;[32, 84, 65, 82];[' ', 'T', 'A', 'R']
64;IB 532;FALSE;65;84;[84, 82, 65];['T', 'R', 'A']
65;DI_RCV.State;FALSE;0;4;[1, 2, 4, 0];['\x01', '\x02', '\x04', '\x00']
66;DI_RCV.InSequence;FALSE;0;1;[0, 1];['\x00', '\x01']
67;DI_RCV.OutRequest;TRUE;;;[32];[' ']
68;DI_RCV.OutSequence;FALSE;0;1;[0, 1];['\x00', '\x01']
69;DI_RCV.InBuffer[1];TRUE;;;[0];['\x00']
70;DI_RCV.InBuffer[2];FALSE;0;18;[0, 1, 18, 16];['\x00', '\x01', '\x12', '\x10']
71;DI_RCV.InBuffer[3];FALSE;0;68;[48, 0, 68];['0', '\x00', 'D']
72;DI_RCV.InBuffer[0];FALSE;0;113;[0, 16, 17, 33, 113];['\x00', '\x10', '\x11', '!', 'q']
73;DI_RCV.InRequest;FALSE;0;112;[0, 16, 112, 32];['\x00', '\x10', 'p', ' ']
74;DI_RCV.RecieveLength;FALSE;16;18;[18, 16];['\x12', '\x10']
75;DI_RCV.CurrentLength;FALSE;16;18;[18, 16];['\x12', '\x10']
76;DI_SND.State;FALSE;0;5;[0, 2, 4, 5, 1];['\x00', '\x02', '\x04', '\x05', '\x01']
77;DI_SND.InBuffer0;FALSE;0;113;[113, 0, 16, 17];['q', '\x00', '\x10', '\x11']
78;DI_SND.InBuffer1;TRUE;;;[0];['\x00']
79;DI_SND.InBuffer2;TRUE;;;[0];['\x00']
80;DI_SND.InBuffer3;FALSE;0;68;[0, 48, 68];['\x00', '0', 'D']
81;DI_SND.OutBuffer0;FALSE;0;17;[0, 16, 17];['\x00', '\x10', '\x11']
82;DI_SND.OutBuffer1;TRUE;;;[0];['\x00']
83;DI_SND.OutBuffer2;TRUE;;;[14];['\x0e']
84;DI_SND.OutBuffer3;FALSE;48;68;[48, 68];['0', 'D']
85;DI_RCV.Rack;TRUE;;;[0];['\x00']
86;DI_RCV.Slot;TRUE;;;[0];['\x00']
87;DI_RCV.SubAddr;TRUE;;;[0];['\x00']
88;DI_SND.InRequest;FALSE;0;112;[112, 0, 16];['p', '\x00', '\x10']
89;DI_SND.InSequence;FALSE;0;1;[1, 0];['\x01', '\x00']
90;DI_SND.OutRequest;FALSE;0;16;[0, 2, 16, 1];['\x00', '\x02', '\x10', '\x01']
91;DI_SND.OutSequence;FALSE;0;1;[0, 1];['\x00', '\x01']
92;DI_SND.RemainingLength;FALSE;0;14;[0, 14];['\x00', '\x0e']
93;DI_SND.CurrentLength;TRUE;;;[14];['\x0e']
94;DI_SND.LastSegmentLength;TRUE;;;[14];['\x0e']
95;DI_SND.Rack;TRUE;;;[0];['\x00']
96;DI_SND.Slot;TRUE;;;[0];['\x00']
97;DI_SND.SubAddr;TRUE;;;[0];['\x00']
98;Trigger;TRUE;;;[0];['\x00']
